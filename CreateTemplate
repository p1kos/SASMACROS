***************************************************************************************;
* Program:CreateTemplate                                                              *;
* GitHub :https://github.com/p1kos/SASMACROS/blob/master/CreateTemplate               *;
* Purpose:Create a Template table that contains all the variable names that you expect*;
* Usage  :%CreateTemplate(work,myTemplate,%quote(var1,var2,var3),%quote(num,,char)    *;
* &lib   :specify the SAS library to save the template to                             *;
* &ds    :Specify the SAS table name to create                                        *;
* &var   :List of variables to create separated by commax                             *;
* &type  :List type char or num or blank for the variables you know the type of       *;
***************************************************************************************;
%macro CreateTemplate(lib,ds,var,type);
   * Get the current quotelenmax option *;
   %let StoreOptionQuoteLenmax=%sysfunc(getoption(QuoteLenMax));
   %put &=StoreOptionQuoteLenmax;

   * Suppress the note in the log about quotes that are longer than 262 bytes long. *;
   options NoQuoteLenMax;
   * Create table with variable names *;
   data &lib..&ds.;
   length NAME $32. TYPE $4;
   * How many variables are there? *;
   inVar="&var.";
   numVars=countw(inVar,',');
   * How many type values are there? *;
   inType="&type.";
   numTypes=countw(inType,',');
   do VARNUM = 1 to numVars;
      NAME=scan(inVar,VARNUM,',');
      if VARNUM <= numTypes then 
      TYPE=scan(intype,VARNUM,',');

      drop inVar inType numVars numTypes;
      output;
   end;
   run;

   * Put back the original QuoteLenMax option *;
   options &StoreOptionQuoteLenmax.;
%mend CreateTemplate;
